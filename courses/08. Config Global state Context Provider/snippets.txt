@context/appContext.js
import React, { useState, useEffect, useContext } from 'react';

// TODO: global state here
const initialState = {
  isLoading: false,
  showAlert: false,
  alertText: '',
  alertType: '',
};

//TODO: AppContext -> React.createContext()
const AppContext = React.createContext();

// TODO: context provider here with props children
const AppProvider = ({ children }) => {
  const [state, setState] = useState(initialState);

  return (
    <AppContext.Provider value={{ ...state, }}>
      {children}
    </AppContext.Provider>
  );
};

// Costum Hook context
const useAppContext = () => {
  return useContext(AppContext);
}

export {AppProvider, initialState, useAppContext};
----------------------------------------------------------------------------------------------------
@index.js

import React from 'react';
import ReactDOM from 'react-dom';
//! Context Provider
import { AppProvider } from './context/appContext';

import 'normalize.css';
import './index.css';

import App from './App';

ReactDOM.render(
  <AppProvider>
    <React.StrictMode>
      <App />
    </React.StrictMode>
  </AppProvider>,
  document.getElementById('root'),
);

----------------------------------------------------------------------------------------------------
@pages/Register.js

//! context costum hooks
import { useAppContext } from '../context/appContext';
  // global state use Navigate()
  const {isLoading, showAlert} = useAppContext()

  return (

        {showAlert && <Alert />}
  )
